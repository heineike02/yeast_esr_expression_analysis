library(dplyr)
base_dir = "C:\\Users\\heine\\github\\expression_broad_data\\expression_data\\SCer_NMPP1_RNA_Seq\\"
print(countData)
#Load raw count data for solis experiment
#countDataList = list(KL = NULL,SC  = NULL)
#metaDataList = list(KL = NULL,SC  = NULL)
#for (exp_species in c("KL","SC")){
#  print(paste("species is ", exp_species))
cts <- paste(base_dir,"solis_2016_counts_msn24.csv",sep = "")
countData = read.csv(cts, row.names = 1, header = TRUE)
print(countData)
#  #selecting out a subset:
#  # countData = countData[,c("7001","7002")]
#  #this metadata file comes from a python routine.
#  meta <- paste(base_dir,"20170817_klscpka_metadata_deseq_",exp_species,".csv",sep = "")
#  metaData = read.csv(meta, row.names = 1)
#  colnames(countData) = row.names(metaData)
#  countDataList[[exp_species]]=countData
#  metaDataList[[exp_species]]=metaData
#  print(metaData)
#  print(countData)
}
#Load raw count data for solis experiment
#countDataList = list(KL = NULL,SC  = NULL)
#metaDataList = list(KL = NULL,SC  = NULL)
#for (exp_species in c("KL","SC")){
#  print(paste("species is ", exp_species))
cts <- paste(base_dir,"solis_2016_counts_msn24.csv",sep = "")
countData = read.csv(cts, row.names = 1, header = TRUE)
print(countData)
#  #selecting out a subset:
#  # countData = countData[,c("7001","7002")]
#  #this metadata file comes from a python routine.
#  meta <- paste(base_dir,"20170817_klscpka_metadata_deseq_",exp_species,".csv",sep = "")
#  metaData = read.csv(meta, row.names = 1)
#  colnames(countData) = row.names(metaData)
#  countDataList[[exp_species]]=countData
#  metaDataList[[exp_species]]=metaData
#  print(metaData)
#  print(countData)
}
#Load raw count data for solis experiment
#countDataList = list(KL = NULL,SC  = NULL)
#metaDataList = list(KL = NULL,SC  = NULL)
#for (exp_species in c("KL","SC")){
#  print(paste("species is ", exp_species))
cts <- paste(base_dir,"solis_2016_counts_msn24.csv",sep = "")
countData = read.csv(cts, row.names = 1, header = TRUE)
print(countData)
#  #selecting out a subset:
#  # countData = countData[,c("7001","7002")]
#  #this metadata file comes from a python routine.
#  meta <- paste(base_dir,"20170817_klscpka_metadata_deseq_",exp_species,".csv",sep = "")
#  metaData = read.csv(meta, row.names = 1)
#  colnames(countData) = row.names(metaData)
#  countDataList[[exp_species]]=countData
#  metaDataList[[exp_species]]=metaData
#  print(metaData)
#  print(countData)
colnames(countData)
colnames(countData)[1:9]
countData = countData[,colnames(countData)[1:9]]
countData
colnames(countData)
print(metaData)
#Load raw count data for solis experiment
#countDataList = list(KL = NULL,SC  = NULL)
#metaDataList = list(KL = NULL,SC  = NULL)
#for (exp_species in c("KL","SC")){
#  print(paste("species is ", exp_species))
cts <- paste(base_dir,"solis_2016_counts_msn24.csv",sep = "")
countData = read.csv(cts, row.names = 1, header = TRUE)
#selecting out a subset:
countData = countData[,colnames(countData)[1:9]]
countData
#load
meta <- paste(base_dir,"solis_2016_counts_msn24_metadata_deseq.csv",sep = "")
metaData = read.csv(meta, row.names = 1)
print(metaData)
#  colnames(countData) = row.names(metaData)
#  countDataList[[exp_species]]=countData
#  metaDataList[[exp_species]]=metaData
#  print(metaData)
#  print(countData)
colnames(countData)
#Load raw count data for solis experiment
#countDataList = list(KL = NULL,SC  = NULL)
#metaDataList = list(KL = NULL,SC  = NULL)
#for (exp_species in c("KL","SC")){
#  print(paste("species is ", exp_species))
cts <- paste(base_dir,"solis_2016_counts_msn24.csv",sep = "")
countData = read.csv(cts, row.names = 1, header = TRUE)
#selecting out a subset:
countData = countData[,colnames(countData)[1:9]]
countData
#load
meta <- paste(base_dir,"solis_2016_counts_msn24_metadata_deseq.csv",sep = "")
metaData = read.csv(meta, row.names = 1)
print(metaData)
write.csv(as.data.frame(rlog_all), file=paste(base_dir,"solis_2016_counts_msn24_metadata_deseq.csv",sep = ""))
# Make rlog data for all samples
#Turns all kl imported data into a DESeqDataSet
dds_all = DESeqDataSetFromMatrix(countData = countData, colData = metaData, design = ~strain+NMPP1+HS)
library(DESeq2)
library(ggplot2)
library(reshape2)
library(lattice)
library(dplyr)
base_dir = "C:\\Users\\heine\\github\\expression_broad_data\\expression_data\\SCer_NMPP1_RNA_Seq\\"
# Make rlog data for all samples
#Turns all kl imported data into a DESeqDataSet
dds_all = DESeqDataSetFromMatrix(countData = countData, colData = metaData, design = ~strain+NMPP1+HS)
# Make rlog data for all samples
#Turns all kl imported data into a DESeqDataSet
dds_all = DESeqDataSetFromMatrix(countData = countData, colData = metaData, design = ~strain+X1NMPP1+HS)
print(dds_all)
#If there are any rows with zero or one count, this command removes them, (in this dataset there are not)
paste(nrow(dds_all[ rowSums(counts(dds_all)) <= 1, ]), "items removed from Kl count data because there were no counts")
dds_all_filtered = dds_all[ rowSums(counts(dds_all)) > 1, ]
#Finds rlog values and prints to file
#uses all default options except blind = FALSE instead of true
#Note from documentation:
#If many of genes have large differences in counts due to the experimental design,it is important to set blind=FALSE for downstream analysis.
rld_all <- rlog(dds_all_filtered, blind = FALSE)  #, fitType = 'local')
rlog_all <- assay(rld_all)
#head(rlog_all)
#plot(rlog_all[,"7050"],rlog_all[,"7002"])
write.csv(as.data.frame(rlog_all), file=paste(base_dir,"solis_2016_counts_msn24_metadata_deseq.csv",sep = ""))
# Make rlog data for all samples
#Turns all kl imported data into a DESeqDataSet
dds_all = DESeqDataSetFromMatrix(countData = countData, colData = metaData, design = ~strain+X1NMPP1+HS)
print(dds_all)
#If there are any rows with zero or one count, this command removes them, (in this dataset there are not)
paste(nrow(dds_all[ rowSums(counts(dds_all)) <= 1, ]), "items removed from count data because there were no counts")
dds_all_filtered = dds_all[ rowSums(counts(dds_all)) > 1, ]
#Finds rlog values and prints to file
#uses all default options except blind = FALSE instead of true
#Note from documentation:
#If many of genes have large differences in counts due to the experimental design,it is important to set blind=FALSE for downstream analysis.
rld_all <- rlog(dds_all_filtered, blind = FALSE)  #, fitType = 'local')
rlog_all <- assay(rld_all)
#head(rlog_all)
#plot(rlog_all[,"7050"],rlog_all[,"7002"])
write.csv(as.data.frame(rlog_all), file=paste(base_dir,"solis_2016_counts_msn24_metadata_deseq.csv",sep = ""))
